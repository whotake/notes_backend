# This compose-file is production only. So, it should not be called directly.
# Instead, it should be a part of your deploy strategy.
# Including something like:
#
#  $ docker-compose -f docker-compose.yml -f docker/docker-compose.prod.yml > docker-compose.deploy.yml
#
# This setup is supposed to be used with `docker-swarm`.
# See `production.rst` docs.

version: "3"
services:
  caddy:
    image: "wemakeservices/caddy-docker:v0.10.9"
    restart: always
    env_file: ./config/.env
    volumes:
      - ./docker/caddy:/root/.caddy
      - django-static:/var/www/django/static:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - webnet

  web:
    image: "registry.gitlab.com/wemake.services/notes_backend:latest"
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
      args:
        DJANGO_ENV: production
    command: sh ./docker/django/gunicorn.sh
    restart: always
    environment:
      DJANGO_ENV: production
    expose:
      - 8000
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.15"
          memory: 200M
      restart_policy:
        condition: on-failure
